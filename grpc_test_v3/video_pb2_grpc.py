# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import video_pb2 as video__pb2


class RecoServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RecoSys = channel.unary_unary(
        '/video_grpc_package.RecoService/RecoSys',
        request_serializer=video__pb2.RecoRequest.SerializeToString,
        response_deserializer=video__pb2.RecoResponse.FromString,
        )


class RecoServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RecoSys(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RecoServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RecoSys': grpc.unary_unary_rpc_method_handler(
          servicer.RecoSys,
          request_deserializer=video__pb2.RecoRequest.FromString,
          response_serializer=video__pb2.RecoResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'video_grpc_package.RecoService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
